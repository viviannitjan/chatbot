Python adalah bahasa pemrograman yang ditafsirkan, interaktif, dan berorientasi objek. Ini menggabungkan modul, pengecualian, pengetikan dinamis, tipe data dinamis tingkat sangat tinggi, dan kelas. Python menggabungkan kekuatan luar biasa dengan sintaksis yang sangat jelas. Ini memiliki antarmuka ke banyak panggilan sistem dan perpustakaan, serta berbagai sistem jendela, dan dapat diperluas dalam C atau C ++. Ini juga dapat digunakan sebagai bahasa ekstensi untuk aplikasi yang membutuhkan antarmuka yang dapat diprogram. Akhirnya, Python portabel: ia berjalan pada banyak varian Unix, pada Mac, dan pada Windows 2000 dan yang lebih baru.<br><br>Untuk mengetahui lebih lanjut, mulailah dengan Tutorial Python . Panduan Pemula untuk tautan Python ke tutorial dan sumber pengantar lainnya untuk mempelajari Python.
~
The Python Software Foundation adalah organisasi nirlaba independen yang memegang hak cipta pada Python versi 2.1 dan yang lebih baru. Misi PSF adalah untuk memajukan teknologi open source yang terkait dengan bahasa pemrograman Python dan untuk mempublikasikan penggunaan Python. Halaman utama PSF ada di https://www.python.org/psf/ .<br><br>Sumbangan untuk PSF bebas pajak di AS. Jika Anda menggunakan Python dan merasa terbantu, silakan berkontribusi melalui halaman donasi PSF .
~
Anda dapat melakukan apa pun yang Anda inginkan dengan sumbernya, selama Anda meninggalkan hak cipta dan menampilkan hak cipta itu dalam dokumentasi apa pun tentang Python yang Anda hasilkan. Jika Anda menghormati aturan hak cipta, boleh saja menggunakan Python untuk penggunaan komersial, menjual salinan Python dalam bentuk sumber atau biner (dimodifikasi atau tidak dimodifikasi), atau untuk menjual produk yang memasukkan Python dalam beberapa bentuk. Kami masih ingin tahu tentang semua penggunaan komersial Python, tentu saja.<br><br>Lihat halaman lisensi PSF untuk menemukan penjelasan lebih lanjut dan tautan ke teks lengkap lisensi.<br><br>Logo Python adalah merek dagang, dan dalam kasus tertentu izin diperlukan untuk menggunakannya. Baca Kebijakan Penggunaan Merek Dagang untuk informasi lebih lanjut.
~
Inilah ringkasan yang sangat singkat tentang apa yang memulai semuanya, ditulis oleh Guido van Rossum:
<br><br>Saya memiliki pengalaman luas dalam mengimplementasikan bahasa yang ditafsirkan dalam kelompok ABC di CWI, dan dari bekerja dengan kelompok ini saya telah belajar banyak tentang desain bahasa. Ini adalah asal dari banyak fitur Python, termasuk penggunaan indentasi untuk pengelompokan pernyataan dan penyertaan tipe data tingkat sangat tinggi (walaupun detailnya semua berbeda dalam Python).<br><br>Saya memiliki sejumlah keluhan tentang bahasa ABC, tetapi juga menyukai banyak fitur-fiturnya. Tidak mungkin untuk memperluas bahasa ABC (atau implementasinya) untuk memperbaiki keluhan saya - pada kenyataannya kurangnya ekstensibilitas adalah salah satu masalah terbesarnya. Saya punya pengalaman menggunakan Modula-2 + dan berbicara dengan desainer Modula-3 dan membaca laporan Modula-3. Modula-3 adalah asal dari sintaks dan semantik yang digunakan untuk pengecualian, dan beberapa fitur Python lainnya.<br><br>Saya bekerja di grup sistem operasi terdistribusi Amoeba di CWI. Kami membutuhkan cara yang lebih baik untuk melakukan administrasi sistem daripada dengan menulis baik program C atau skrip Bourne shell, karena Amuba memiliki antarmuka sistem panggilan sendiri yang tidak mudah diakses dari cangkang Bourne. Pengalaman saya dengan penanganan kesalahan di Amuba membuat saya sangat sadar akan pentingnya pengecualian sebagai fitur bahasa pemrograman.<br><br>Terpikir oleh saya bahwa bahasa scripting dengan sintaks seperti ABC tetapi dengan akses ke panggilan sistem Amuba akan memenuhi kebutuhan. Saya menyadari bahwa bodoh untuk menulis bahasa khusus Amuba, jadi saya memutuskan bahwa saya membutuhkan bahasa yang pada umumnya dapat diperluas.<br><br>Selama liburan Natal 1989, saya punya banyak waktu, jadi saya memutuskan untuk mencobanya. Selama tahun berikutnya, sementara sebagian besar masih mengerjakannya di waktu saya sendiri, Python digunakan dalam proyek Amoeba dengan keberhasilan yang semakin meningkat, dan umpan balik dari kolega membuat saya menambahkan banyak perbaikan awal.<br><br>Pada Februari 1991, setelah lebih dari satu tahun pembangunan, saya memutuskan untuk mengirim ke USENET. Sisanya ada di file Misc/HISTORY .
~
Python adalah bahasa pemrograman tujuan umum tingkat tinggi yang dapat diterapkan ke banyak kelas masalah yang berbeda.<br><br>Bahasa ini dilengkapi dengan pustaka standar besar yang mencakup bidang-bidang seperti pemrosesan string (ekspresi reguler, Unicode, penghitungan perbedaan antara file), protokol Internet (HTTP, FTP, SMTP, XML-RPC, POP, IMAP, pemrograman CGI), rekayasa perangkat lunak (pengujian unit, pencatatan, pembuatan profil, penguraian kode Python), dan antarmuka sistem operasi (panggilan sistem, sistem file, soket TCP / IP). Lihatlah daftar isi untuk The Python Standard Library untuk mendapatkan ide tentang apa yang tersedia. Berbagai ekstensi pihak ketiga juga tersedia. Konsultasikan Indeks Paket Python untuk menemukan paket yang menarik bagi Anda.
~
Versi python diberi nomor ABC atau AB A adalah nomor versi utama - hanya ditambahkan untuk perubahan besar dalam bahasa. B adalah nomor versi minor, ditambahkan untuk mengurangi perubahan yang menghancurkan bumi. C adalah level mikro - ia bertambah untuk setiap rilis bugfix. Lihat PEP 6 untuk informasi lebih lanjut tentang rilis perbaikan bug.<br><br>Tidak semua rilis adalah rilis perbaikan bug. Menjelang rilis besar baru, serangkaian rilis pengembangan dibuat, dilambangkan sebagai alpha, beta, atau kandidat rilis. Alpha adalah rilis awal di mana antarmuka belum difinalisasi; itu tidak terduga untuk melihat perubahan antarmuka antara dua rilis alpha. Beta lebih stabil, menjaga antarmuka yang ada tetapi mungkin menambahkan modul baru, dan melepaskan kandidat yang dibekukan, tidak membuat perubahan kecuali jika diperlukan untuk memperbaiki bug kritis.<br><br>Versi kandidat alfa, beta, dan rilis memiliki akhiran tambahan. Sufiks untuk versi alfa adalah "aN" untuk sejumlah N kecil, sufiks untuk versi beta adalah "bN" untuk sejumlah kecil N, dan sufiks untuk versi kandidat rilis adalah "cN" untuk sejumlah kecil N. Dengan kata lain, semua versi berlabel 2.0aN mendahului versi berlabel 2.0bN, yang mendahului versi berlabel 2.0cN, dan yang mendahului 2.0.<br><br>Anda juga dapat menemukan nomor versi dengan akhiran “+”, mis. “2.2+”. Ini adalah versi yang belum dirilis, dibangun langsung dari repositori pengembangan CPython. Dalam praktiknya, setelah rilis minor final dibuat, versi tersebut bertambah ke versi minor berikutnya, yang menjadi versi “a0”, misalnya “2.4a0”.<br><br>Lihat juga dokumentasi untuk sys.version , sys.hexversion , dan sys.version_info .
~
Distribusi sumber Python terbaru selalu tersedia dari python.org, di https://www.python.org/downloads/ . Sumber pengembangan terbaru dapat diperoleh di https://github.com/python/cpython/ .<br><br>Distribusi sumber adalah file tar gzip yang berisi sumber C lengkap, dokumentasi berformat Sphinx, modul pustaka Python, program contoh, dan beberapa perangkat lunak berguna yang dapat didistribusikan secara bebas. Sumber akan mengkompilasi dan kehabisan kotak pada sebagian besar platform UNIX.<br><br>Baca bagian Memulai dari Panduan Pengembang Python untuk informasi lebih lanjut tentang mendapatkan kode sumber dan mengompilasinya.
~
Dokumentasi standar untuk versi stabil Python saat ini tersedia di https://docs.python.org/3/ . PDF, teks biasa, dan versi HTML yang dapat diunduh juga tersedia di https://docs.python.org/3/download.html .<br><br>Dokumentasi ini ditulis dalam reStructuredText dan diproses oleh alat dokumentasi Sphinx . Sumber reStructuredText untuk dokumentasi adalah bagian dari distribusi sumber Python.
~
Ada banyak tutorial dan buku yang tersedia. Dokumentasi standar termasuk Tutorial Python.<br><br>Konsultasikan Panduan Pemula untuk menemukan informasi untuk memulai programmer Python, termasuk daftar tutorial.
~
Ada newsgroup, comp.lang.python , dan milis, python-list . Newsgroup dan milis saling berhubungan satu sama lain - jika Anda dapat membaca berita, tidak perlu berlangganan ke milis. comp.lang.python adalah lalu lintas tinggi, menerima ratusan posting setiap hari, dan pembaca Usenet seringkali lebih mampu mengatasi volume ini.<br><br>Pengumuman tentang rilis dan acara perangkat lunak baru dapat ditemukan di comp.lang.python.announce, daftar moderasi lalu lintas rendah yang menerima sekitar lima posting per hari. Ini tersedia sebagai milis python-announce .<br><br>Info lebih lanjut tentang milis lain dan newsgroup dapat ditemukan di https://www.python.org/community/lists/ .
~
Rilis alfa dan beta tersedia dari https://www.python.org/downloads/ . Semua rilis diumumkan di comp.lang.python dan comp.lang.python.announce newsgroup dan di beranda Python di https://www.python.org/ ; umpan RSS berita tersedia.<br><br>Anda juga dapat mengakses versi pengembangan Python melalui Git. Lihat Panduan Pengembang Python untuk detailnya.
~
Untuk melaporkan bug atau mengirimkan tambalan, silakan gunakan instalasi Roundup di https://bugs.python.org/.<br><br>Anda harus memiliki akun Roundup untuk melaporkan bug; ini memungkinkan kami untuk menghubungi Anda jika kami memiliki pertanyaan tindak lanjut. Ini juga akan memungkinkan Roundup untuk mengirimi Anda pembaruan saat kami bertindak atas bug Anda. Jika sebelumnya Anda menggunakan SourceForge untuk melaporkan bug ke Python, Anda bisa mendapatkan kata sandi Roundup Anda melalui prosedur pengaturan ulang kata sandi Roundup.<br><br>Untuk informasi lebih lanjut tentang bagaimana Python dikembangkan, lihat Panduan Pengembang Python .
~
Mungkin terbaik untuk mengutip buku favorit Anda tentang Python.<br><br>Artikel pertama tentang Python ditulis pada tahun 1991 dan sekarang cukup usang.<br><br>Guido van Rossum dan Jelke de Boer, "Secara Interaktif Menguji Server Jarak Jauh Menggunakan Bahasa Pemrograman Python", CWI Quarterly, Volume 4, Edisi 4 (Desember 1991), Amsterdam, hlm 283–303.
~
Ya, ada banyak, dan lebih banyak lagi yang diterbitkan. Lihat wiki python.org di https://wiki.python.org/moin/PythonBooks untuk daftar.<br><br>Anda juga dapat mencari toko buku online untuk "Python" dan memfilter referensi Monty Python; atau mungkin mencari "Python" dan "bahasa".
~
Infrastruktur proyek Python terletak di seluruh dunia dan dikelola oleh Tim Infrastruktur Python. Detail di sini .
~
Ketika ia mulai menerapkan Python, Guido van Rossum juga membaca skrip yang diterbitkan dari "Monty Python Flying Circus" , sebuah serial komedi BBC dari tahun 1970-an. Van Rossum berpikir dia membutuhkan nama yang pendek, unik, dan sedikit misterius, jadi dia memutuskan untuk memanggil bahasa Python.
~
Tidak, tapi itu membantu. :)
~
Sangat stabil. Rilis baru yang stabil telah keluar kira-kira setiap 6 hingga 18 bulan sejak 1991, dan ini sepertinya akan terus berlanjut. Saat ini biasanya ada sekitar 18 bulan antara rilis utama.<br><br>Pengembang mengeluarkan rilis "bugfix" versi lama, sehingga stabilitas rilis yang ada secara bertahap membaik. Rilis perbaikan bug, ditunjukkan oleh komponen ketiga dari nomor versi (misalnya 3.5.3, 3.6.2), dikelola untuk stabilitas; hanya perbaikan untuk masalah yang diketahui yang termasuk dalam rilis perbaikan bug, dan dijamin antarmuka akan tetap sama di sepanjang serangkaian rilis perbaikan bug.<br><br>Rilis stabil terbaru selalu dapat ditemukan di halaman unduh Python . Ada dua versi Python yang siap-produksi: 2.x dan 3.x. Versi yang direkomendasikan adalah 3.x, yang didukung oleh perpustakaan yang paling banyak digunakan. Meskipun 2.x masih banyak digunakan, itu tidak akan dipertahankan setelah 1 Januari 2020 .
~
Mungkin ada puluhan ribu pengguna, meskipun sulit untuk mendapatkan jumlah yang tepat.<br><br>Python tersedia untuk diunduh gratis, jadi tidak ada angka penjualan, dan itu tersedia dari banyak situs yang berbeda dan dikemas dengan banyak distribusi Linux, jadi statistik unduhan juga tidak menceritakan keseluruhan cerita.<br><br>Newsgroup comp.lang.python sangat aktif, tetapi tidak semua pengguna Python memposting ke grup atau bahkan membacanya.
~
Lihat https://www.python.org/about/success untuk daftar proyek yang menggunakan Python. Konsultasi proses untuk konferensi Python masa lalu akan mengungkapkan kontribusi dari berbagai perusahaan dan organisasi.<br><br>Proyek Python profil tinggi termasuk manajer milis Mailman dan server aplikasi Zope . Beberapa distribusi Linux, terutama Red Hat , telah menulis sebagian atau semua installer dan perangkat lunak sistem administrasi mereka dengan Python. Perusahaan yang menggunakan Python secara internal termasuk Google, Yahoo, dan Lucasfilm Ltd.
~
Lihat https://www.python.org/dev/peps/ untuk Proposal Peningkatan Python (PEPs). PEP adalah dokumen desain yang menggambarkan fitur baru yang disarankan untuk Python, memberikan spesifikasi teknis yang ringkas dan alasannya. Cari PEP berjudul "Jadwal Rilis Python XY", di mana XY adalah versi yang belum dirilis secara publik.<br><br>Perkembangan baru dibahas pada milis python-dev .
~
Secara umum, tidak. Sudah ada jutaan baris kode Python di seluruh dunia, sehingga setiap perubahan dalam bahasa yang membatalkan lebih dari sebagian kecil dari program yang ada harus diremehkan. Bahkan jika Anda dapat menyediakan program konversi, masih ada masalah memperbarui semua dokumentasi; banyak buku telah ditulis tentang Python, dan kami tidak ingin membatalkan semuanya dengan satu pukulan.<br><br>Diperlukan jalur peningkatan bertahap jika fitur harus diubah. PEP 5 menjelaskan prosedur yang diikuti untuk memperkenalkan perubahan yang tidak kompatibel ke belakang sambil meminimalkan gangguan bagi pengguna.
~
Iya nih.<br><br>Masih umum untuk memulai siswa dengan bahasa prosedur dan jenis statis seperti Pascal, C, atau subset dari C ++ atau Java. Siswa mungkin lebih baik dilayani dengan mempelajari Python sebagai bahasa pertama mereka. Python memiliki sintaks yang sangat sederhana dan konsisten serta pustaka standar yang besar dan, yang paling penting, menggunakan Python dalam kursus pemrograman awal memungkinkan siswa berkonsentrasi pada keterampilan pemrograman penting seperti dekomposisi masalah dan desain tipe data. Dengan Python, siswa dapat dengan cepat diperkenalkan dengan konsep-konsep dasar seperti loop dan prosedur. Mereka bahkan dapat bekerja dengan objek yang ditentukan pengguna dalam kursus pertama mereka.<br><br>Untuk siswa yang belum pernah memprogram sebelumnya, menggunakan bahasa yang diketik secara statis tampaknya tidak wajar. Ini menyajikan kompleksitas tambahan bahwa siswa harus menguasai dan memperlambat laju kursus. Para siswa berusaha belajar berpikir seperti komputer, menguraikan masalah, mendesain antarmuka yang konsisten, dan merangkum data. Sementara belajar untuk menggunakan bahasa yang diketik secara statis adalah penting dalam jangka panjang, itu tidak selalu merupakan topik terbaik untuk dibahas dalam kursus pemrograman pertama siswa.<br><br>Banyak aspek lain dari Python menjadikannya bahasa pertama yang baik. Seperti Java, Python memiliki perpustakaan standar yang besar sehingga siswa dapat ditugaskan proyek pemrograman sangat awal dalam kursus yang melakukan sesuatu. Tugas tidak terbatas pada kalkulator empat fungsi standar dan periksa program keseimbangan. Dengan menggunakan perpustakaan standar, siswa dapat memperoleh kepuasan bekerja pada aplikasi realistis saat mereka mempelajari dasar-dasar pemrograman. Menggunakan perpustakaan standar juga mengajarkan siswa tentang penggunaan kembali kode. Modul pihak ketiga seperti PyGame juga membantu dalam memperluas jangkauan siswa.<br><br>Penerjemah interaktif Python memungkinkan siswa untuk menguji fitur bahasa saat mereka sedang pemrograman. Mereka dapat menjaga jendela dengan interpreter berjalan saat mereka memasukkan sumber program mereka di jendela lain. Jika mereka tidak dapat mengingat metode untuk daftar, mereka dapat melakukan sesuatu seperti ini:<br><br>
>>>
>>> L = []
>>> dir(L) 
['__add__', '__class__', '__contains__', '__delattr__', '__delitem__',
'__dir__', '__doc__', '__eq__', '__format__', '__ge__',
'__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__',
'__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__',
'__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__',
'__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__',
'__sizeof__', '__str__', '__subclasshook__', 'append', 'clear',
'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove',
'reverse', 'sort']
>>> [d for d in dir(L) if '__' not in d]
['append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']

>>> help(L.append)
Help on built-in function append:

append(...)
    L.append(object) -> None -- append object to end

>>> L.append(1)
>>> L
[1]
Dengan penerjemah, dokumentasi tidak pernah jauh dari siswa karena mereka sedang pemrograman.<br><br>Ada juga IDE yang bagus untuk Python. IDLE adalah IDE lintas-platform untuk Python yang ditulis dalam Python menggunakan Tkinter. PythonWin adalah IDE khusus Windows. Pengguna Emacs akan senang mengetahui bahwa ada mode Python yang sangat bagus untuk Emacs. Semua lingkungan pemrograman ini menyediakan penyorotan sintaksis, indentasi otomatis, dan akses ke interpreter interaktif saat pengkodean. Konsultasikan wiki Python untuk daftar lengkap lingkungan penyuntingan Python.<br><br>Jika Anda ingin mendiskusikan penggunaan Python dalam pendidikan, Anda mungkin tertarik untuk bergabung dengan milis edu-sig .
~
Rinaldi Munir
~
Kevin Andrian Liwinata
~
144 SKS
~
Sistem Komunikasi Satelit Domestik
~
17 April 2019
~
4 kali
~
5 tahun sekali
~
louviju
~
????
~
DKI Jakarta
~
Jayakarta
~
Knuth-Morris-Prat
~
Magnus Carlsen
~
Blackhole M87
~
Velove Vexia
~
Tujuh orang
~
1945
~
3 setengah tahun
~
Jl. Pegangsaan Timur No 56
~
Kantin Borju

